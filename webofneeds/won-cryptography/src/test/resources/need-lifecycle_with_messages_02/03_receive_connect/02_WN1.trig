##################################################################
#              NEED REPRESENTATION AT THE WON NODE               #
##################################################################

@prefix :       <http://www.example.com/resource/need/> .
@prefix remote: <http://www.remote-example.com/resource/need/> .
@prefix webID:  <http://www.example.com/webids/> .

@prefix won:    <https://w3id.org/won/model#> .
@prefix crypt:  <https://w3id.org/won/cryptography#> .
@prefix msg:    <https://w3id.org/won/message#> .

@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix tio:    <http://purl.org/tio/ns#> .
@prefix gr:     <http://purl.org/goodrelations/v1#> .


############# NEED META INFO ##############
# document URL: :[randomNeedID_1]/meta

GRAPH :[randomNeedID_1]/meta#data {

    :[randomNeedID_1]

        won:hasNeedEvents
            :[randomNeedID_1]/needEvents ;
        won:hasConnections
            :[randomNeedID_1]/connections ;

        won:isInState
            won:Active ;
        won:hasFacet
            won:ChatFacet ;

        :[randomNeedID_1]/needEvents
            rdfs:member
                :[randomNeedID_1]/event/0 .

        :[randomNeedID_1]/connections
            rdfs:member
                :[randomNeedID_1]/connection/[randomConnectionID_1_1] .

        :[randomNeedID_1]/connection/[randomConnectionID_1_1]
            :won:hasEventContainer [
                rdfs:member
                    :[randomNeedID_1]/connection/[randomConnectionID_1_1]/event/0
                    remote:[randomNeedID_2]/connection/[randomConnectionID_2_1]/event/[randomEventID_2_2]
            ]

}

:[randomNeedID_1]/meta#data
    crypt:hasSignature [
        a crypt:WonSignature ;
        crypt:signer webID:WN1
    ]

############# NEED CORE CONTENT ##############
# document URL: :[randomNeedID_1]/core

# remains the same

############# NEED TRANSIENT CONTENT ##############
# document URL: :[randomNeedID_1]/transient

# remains the same

############# NEED MESSAGE 0 ##############
# document URL: :[randomNeedID_1]/event/0

# remains the same

############# CONNECT MESSAGE ##############
# document URL: :[randomNeedID_1]/connection/[randomConnectionID_1_1]/event/0

# remains the same

############# INCOMING CONNECT MESSAGE ##############
# document URL: remote:[randomNeedID_2]/connection/[randomConnectionID_2_1]/event/[randomEventID_2_2]

GRAPH remote:[randomNeedID_2]/connection/[randomConnectionID_2_1]/event/[randomEventID_2_2]#data {

    remote:[randomNeedID_2]/connection/[randomConnectionID_2_1]/event/[randomEventID_2_2]
        a msg:ConnectMessage ;
        msg:sender remote:[randomNeedID_2] ;
        msg:receiver :[randomNeedID_1] .

        msg:refersTo
            # a hint event within the same connection
            remote:[randomNeedID_2]/connection/[randomConnectionID_2_1]/event/[randomEventID_2_1]

        remote:[randomNeedID_2]/connection/[randomConnectionID_2_1]/event/[randomEventID_2_1]#data
            crypt:hasSignature [
                a crypt:WonSignature ;
                crypt:signer webID:matcher_1 .
                # signature data ...
            ] .

        :[randomNeedID_1]/core#data
            crypt:hasSignature [
                a crypt:WonSignature ;
                crypt:signer webID:owner_1 .
                # signature data ...
            ] .

}

remote:[randomNeedID_2]/connection/[randomConnectionID_2_1]/event/[randomEventID_2_2]#data
    crypt:hasSignature [
        a crypt:WonSignature ;
        crypt:signer webID:owner_2 .
        # signature data ...
    ]

