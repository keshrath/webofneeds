##################################################################
#              NEED REPRESENTATION AT THE WON NODE               #
##################################################################

@prefix :       <http://www.example.com/resource/need/> .
@prefix webID:  <http://www.example.com/webids/> .

@prefix won:    <https://w3id.org/won/model#> .
@prefix crypt:  <https://w3id.org/won/cryptography#> .
@prefix msg:    <https://w3id.org/won/message#> .

@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix tio:    <http://purl.org/tio/ns#> .
@prefix gr:     <http://purl.org/goodrelations/v1#> .


############# NEED META INFO ##############
# document URL: :[randomNeedID_1]/meta

GRAPH :[randomNeedID_1]/meta#data {

    :[randomNeedID_1]

        won:hasNeedEvents
            :[randomNeedID_1]/needEvents ;
        won:hasConnections
            :[randomNeedID_1]/connections ;

        won:isInState
            won:Active ;
        won:hasFacet
            won:ChatFacet ;

        :[randomNeedID_1]/needEvents
            rdfs:member
                :[randomNeedID_1]/event/0 .

}

:[randomNeedID_1]/meta#data
    crypt:hasSignature [
        a crypt:WonSignature ;
        crypt:signer webID:WN1
    ]

############# NEED CORE CONTENT ##############
# document URL: :[randomNeedID_1]/core

GRAPH :[randomNeedID_1]/core#data {

    :[randomNeedID_1]
        a won:Need ;
        won:hasBasicNeedType
            won:Supply ;
        won:hasContent
            # see issue https://github.com/researchstudio-sat/webofneeds/issues/42
            [
                a tio:Taxi .
            ] .
}

# extracted from the message
:[randomNeedID_1]/core#data
    crypt:hasSignature [
        a crypt:WonSignature ;
        crypt:signer webID:owner_1 .
        # signature data ...
    ]


############# NEED TRANSIENT CONTENT ##############
# document URL: :[randomNeedID_1]/transient

GRAPH :[randomNeedID_1]/transient#data {

    :[randomNeedID_1]
        won:hasContent
            [
                gr:condition "Has been vacuumed three days ago!" .
            ]
}

# extracted from the message
:[randomNeedID_1]/transient#data
    crypt:hasSignature [
        a crypt:WonSignature ;
        crypt:signer webID:owner_1 .
        # signature data ...
    ]


############# NEED MESSAGE 0 ##############
# document URL: :[randomNeedID_1]/event/0

GRAPH :[randomNeedID_1]/event/0#data {

    :[randomNeedID_1]/event/0
        a msg:CreateMessage ;

        msg:hasContent :[randomNeedID_1]/core ;
        msg:hasContent :[randomNeedID_1]/transient .


        :[randomNeedID_1]/core#data
            crypt:hasSignature [
                a crypt:WonSignature ;
                crypt:signer webID:owner_1 .
                # signature data ...
            ]

        :[randomNeedID_1]/transient#data
            crypt:hasSignature [
                a crypt:WonSignature ;
                crypt:signer webID:owner_1 .
                # signature data ...
            ]
}


:[randomNeedID_1]/event/0#data
    crypt:hasSignature [
        a crypt:WonSignature .
        # signature data ...
    ]
